from aiogram.types import (InlineKeyboardButton, InlineKeyboardMarkup,
                           KeyboardButton, ReplyKeyboardMarkup, WebAppInfo)
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder


def main_menu_keyboard():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    builder = ReplyKeyboardBuilder()

    builder.add(KeyboardButton(text="üí∞ –ë–∞–ª–∞–Ω—Å"))
    builder.add(KeyboardButton(text="‚ûï –î–æ—Ö–æ–¥"))
    builder.add(KeyboardButton(text="‚ûñ –†–∞—Å—Ö–æ–¥"))
    builder.add(KeyboardButton(text="üí≥ –ö–æ—à–µ–ª—å–∫–∏"))
    builder.add(KeyboardButton(text="üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏"))
    builder.add(KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"))
    builder.add(KeyboardButton(text="üì± –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"))
    builder.add(KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"))
    builder.add(KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å"))

    builder.adjust(1, 2, 2, 2, 1, 1)

    return builder.as_markup(
        resize_keyboard=True,
        one_time_keyboard=False,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ..."
    )


def web_app_keyboard(web_app_url):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è WebApp"""
    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(
        text="üì± –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        web_app=WebAppInfo(url=web_app_url)
    ))

    return builder.as_markup()


def wallets_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞–º–∏"""
    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(
        text="‚ûï –°–æ–∑–¥–∞—Ç—å –∫–æ—à–µ–ª–µ–∫",
        callback_data="create_wallet"
    ))
    builder.add(InlineKeyboardButton(
        text="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
        callback_data="edit_wallets"
    ))
    builder.add(InlineKeyboardButton(
        text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å",
        callback_data="delete_wallets"
    ))

    builder.adjust(1)

    return builder.as_markup()


def categories_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏"""
    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(
        text="‚ûï –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
        callback_data="create_category"
    ))
    builder.add(InlineKeyboardButton(
        text="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
        callback_data="edit_categories"
    ))
    builder.add(InlineKeyboardButton(
        text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å",
        callback_data="delete_categories"
    ))

    builder.adjust(1)

    return builder.as_markup()


def transaction_type_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"""
    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∞",
        callback_data="cancel_transaction"
    ))

    return builder.as_markup()


def skip_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å"""
    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(
        text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
        callback_data="skip_field"
    ))
    builder.add(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∞",
        callback_data="cancel_transaction"
    ))

    builder.adjust(1)

    return builder.as_markup()


def wallet_selection_keyboard(wallets):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ—à–µ–ª—å–∫–∞"""
    builder = InlineKeyboardBuilder()

    for wallet in wallets:
        builder.add(InlineKeyboardButton(
            text=f"{wallet.title} ({wallet.balance} {wallet.currency.char_code})",
            callback_data=f"select_wallet_{wallet.uuid}"
        ))

    builder.add(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∞",
        callback_data="cancel_transaction"
    ))

    builder.adjust(1)

    return builder.as_markup()


def category_selection_keyboard(categories, for_parent=False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    builder = InlineKeyboardBuilder()

    for category in categories:
        indent = "  " * category.level
        callback_data = f"select_category_parent_{category.uuid}" if for_parent else f"select_category_{category.uuid}"
        builder.add(InlineKeyboardButton(
            text=f"{indent}{category.title}",
            callback_data=callback_data
        ))

    if not for_parent:
        builder.add(InlineKeyboardButton(
            text="‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
            callback_data="create_new_category"
        ))
        builder.add(InlineKeyboardButton(
            text="‚ùå –ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
            callback_data="no_category"
        ))

    builder.add(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∞",
        callback_data="cancel_transaction"
    ))

    builder.adjust(1)

    return builder.as_markup()


def category_parent_selection_keyboard(categories):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    builder = InlineKeyboardBuilder()

    for category in categories:
        indent = "  " * category.level
        builder.add(InlineKeyboardButton(
            text=f"{indent}{category.title}",
            callback_data=f"select_category_parent_{category.uuid}"
        ))

    builder.add(InlineKeyboardButton(
        text="‚è≠Ô∏è –°–æ–∑–¥–∞—Ç—å –∫–æ—Ä–Ω–µ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
        callback_data="create_root_category"
    ))
    builder.add(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∞",
        callback_data="cancel_category"
    ))

    builder.adjust(1)

    return builder.as_markup()


def currency_selection_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç—ã"""
    builder = InlineKeyboardBuilder()

    # –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∞–ª—é—Ç—ã
    currencies = [
        ("RUB", "üá∑üá∫ –†—É–±–ª—å"),
        ("USD", "üá∫üá∏ –î–æ–ª–ª–∞—Ä"),
        ("EUR", "üá™üá∫ –ï–≤—Ä–æ"),
        ("CNY", "üá®üá≥ –Æ–∞–Ω—å"),
    ]

    for code, name in currencies:
        builder.add(InlineKeyboardButton(
            text=name,
            callback_data=f"select_currency_{code}"
        ))

    builder.add(InlineKeyboardButton(
        text="‚ûï –î—Ä—É–≥–∏–µ –≤–∞–ª—é—Ç—ã",
        callback_data="other_currencies"
    ))

    builder.adjust(2)

    return builder.as_markup()


def confirmation_keyboard(action):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(
        text="‚úÖ –î–∞",
        callback_data=f"confirm_{action}"
    ))
    builder.add(InlineKeyboardButton(
        text="‚ùå –ù–µ—Ç",
        callback_data=f"cancel_{action}"
    ))

    builder.adjust(2)

    return builder.as_markup()


def back_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥"""
    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
        callback_data="back"
    ))

    return builder.as_markup()


def paginated_categories_keyboard(categories, page=0, items_per_page=10):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    builder = InlineKeyboardBuilder()

    # –í—ã—á–∏—Å–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = page * items_per_page
    end_idx = start_idx + items_per_page
    page_categories = categories[start_idx:end_idx]

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    for category in page_categories:
        indent = "  " * category.level
        builder.add(InlineKeyboardButton(
            text=f"{indent}{category.title}",
            callback_data=f"select_category_parent_{category.uuid}"
        ))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    total_pages = (len(categories) + items_per_page - 1) // items_per_page
    if total_pages > 1:
        nav_row = []

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        if page > 0:
            nav_row.append(InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=f"categories_page_{page - 1}"
            ))

        # –ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ"
        if page < total_pages - 1:
            nav_row.append(InlineKeyboardButton(
                text="–î–∞–ª–µ–µ ‚û°Ô∏è",
                callback_data=f"categories_page_{page + 1}"
            ))

        if nav_row:
            builder.row(*nav_row)

    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    builder.add(InlineKeyboardButton(
        text="‚è≠Ô∏è –°–æ–∑–¥–∞—Ç—å –∫–æ—Ä–Ω–µ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
        callback_data="create_root_category"
    ))
    builder.add(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∞",
        callback_data="cancel_category"
    ))

    builder.adjust(1)

    return builder.as_markup()


def paginated_category_selection_keyboard(categories, page=0, items_per_page=10, for_parent=False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    builder = InlineKeyboardBuilder()

    # –í—ã—á–∏—Å–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = page * items_per_page
    end_idx = start_idx + items_per_page
    page_categories = categories[start_idx:end_idx]

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    for category in page_categories:
        indent = "  " * category.level
        callback_data = f"select_category_parent_{category.uuid}" if for_parent else f"select_category_{category.uuid}"
        builder.add(InlineKeyboardButton(
            text=f"{indent}{category.title}",
            callback_data=callback_data
        ))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    total_pages = (len(categories) + items_per_page - 1) // items_per_page
    if total_pages > 1:
        nav_row = []

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        if page > 0:
            nav_row.append(InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=f"category_select_page_{page - 1}"
            ))

        # –ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ"
        if page < total_pages - 1:
            nav_row.append(InlineKeyboardButton(
                text="–î–∞–ª–µ–µ ‚û°Ô∏è",
                callback_data=f"category_select_page_{page + 1}"
            ))

        if nav_row:
            builder.row(*nav_row)

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    if not for_parent:
        builder.add(InlineKeyboardButton(
            text="‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
            callback_data="create_new_category"
        ))
        builder.add(InlineKeyboardButton(
            text="‚ùå –ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
            callback_data="no_category"
        ))

    builder.add(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∞",
        callback_data="cancel_transaction"
    ))

    builder.adjust(1)

    return builder.as_markup()
