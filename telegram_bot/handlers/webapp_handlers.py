"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è Telegram WebApp.
"""

from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import Message
from django.conf import settings

from ..keyboards import web_app_keyboard


class WebAppHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Telegram WebApp."""

    def __init__(self):
        self.router = Router()
        self._register_handlers()

    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤."""

        @self.router.message(Command("app"))
        async def open_web_app(message: Message):
            """–û—Ç–∫—Ä—ã—Ç–∏–µ WebApp."""
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            web_app_url = f"{settings.TELEGRAM_WEBHOOK_URL}/telegram/auto-auth/"

            await message.answer(
                "üì± <b>–û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</b>\n\n"
                "–î–ª—è —É–¥–æ–±–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º.",
                reply_markup=web_app_keyboard(web_app_url)
            )

        @self.router.message(F.text == "üì± –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        async def web_app_button(message: Message):
            """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            web_app_url = f"{settings.TELEGRAM_WEBHOOK_URL}/telegram/auto-auth/"

            await message.answer(
                "üì± <b>–û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</b>\n\n"
                "–î–ª—è —É–¥–æ–±–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º.",
                reply_markup=web_app_keyboard(web_app_url)
            )

    def get_router(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞."""
        return self.router
