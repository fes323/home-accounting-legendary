#!/usr/bin/env python
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã run_bot
"""
import os
import sys

import psutil


def find_bot_processes():
    """–ù–∞–π—Ç–∏ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Python, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ –±–æ—Ç–∞"""
    bot_processes = []
    for proc in psutil.process_iter(['pid', 'name', 'cmdline']):
        try:
            if proc.info['name'] == 'python.exe' or proc.info['name'] == 'python':
                cmdline = proc.info['cmdline']
                if cmdline and any('run_bot' in arg for arg in cmdline):
                    bot_processes.append(proc)
        except (psutil.NoSuchProcess, psutil.AccessDenied):
            continue
    return bot_processes


def test_logic():
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã run_bot")
    print("=" * 50)

    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
    scenarios = [
        {"kill_existing": False, "force": False, "name": "–û–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫"},
        {"kill_existing": True, "force": False, "name": "–° --kill-existing"},
        {"kill_existing": False, "force": True, "name": "–° --force"},
    ]

    processes = find_bot_processes()
    print(f"–ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–∞: {len(processes)}")

    for scenario in scenarios:
        print(f"\nüìã –°—Ü–µ–Ω–∞—Ä–∏–π: {scenario['name']}")
        print(f"   kill_existing: {scenario['kill_existing']}")
        print(f"   force: {scenario['force']}")

        # –õ–æ–≥–∏–∫–∞ –∏–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
        if scenario['kill_existing']:
            print("   ‚úÖ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤...")
            # –ó–¥–µ—Å—å –±—ã–ª–∞ –±—ã –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        elif not scenario['kill_existing']:
            if processes and not scenario['force']:
                print("   ‚ùå –ù–∞–π–¥–µ–Ω—ã –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, –∑–∞–ø—É—Å–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
            else:
                print("   ‚úÖ –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω")
        else:
            print("   ‚úÖ –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω")


if __name__ == "__main__":
    test_logic()
