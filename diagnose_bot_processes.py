#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–∞
"""
import sys

import psutil


def find_bot_processes():
    """–ù–∞–π—Ç–∏ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Python, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ –±–æ—Ç–∞"""
    bot_processes = []
    for proc in psutil.process_iter(['pid', 'name', 'cmdline', 'status']):
        try:
            if proc.info['name'] == 'python.exe' or proc.info['name'] == 'python':
                cmdline = proc.info['cmdline']
                if cmdline and any('run_bot' in arg for arg in cmdline):
                    bot_processes.append(proc)
        except (psutil.NoSuchProcess, psutil.AccessDenied):
            continue
    return bot_processes


def main():
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–∞")
    print("=" * 50)

    processes = find_bot_processes()

    if not processes:
        print("‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return

    print(f"–ù–∞–π–¥–µ–Ω–æ {len(processes)} –∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –±–æ—Ç–∞:")
    print()

    for i, proc in enumerate(processes, 1):
        try:
            print(f"{i}. PID: {proc.pid}")
            print(f"   –°—Ç–∞—Ç—É—Å: {proc.status()}")
            print(f"   –ö–æ–º–∞–Ω–¥–∞: {' '.join(proc.info['cmdline'])}")
            print(f"   –†–∞–±–æ—Ç–∞–µ—Ç: {proc.is_running()}")
            print()
        except Exception as e:
            print(f"{i}. PID: {proc.pid} - –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")
            print()

    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã
    if processes:
        print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print("python manage.py stop_bot --force")
        print()
        print("–ò–ª–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π:")
        print("python manage.py run_bot --kill-existing")


if __name__ == "__main__":
    main()
